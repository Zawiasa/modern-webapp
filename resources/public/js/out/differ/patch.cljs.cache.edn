;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name differ.patch, :imports nil, :requires {set clojure.set, clojure.set clojure.set}, :uses nil, :defs {alterations {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/differ/patch.cljs", :line 40, :column 7, :end-line 40, :end-column 18, :arglists (quote ([state diff])), :doc "Returns a new datastructure, containing the changes in the provided diff."}, :name differ.patch/alterations, :variadic false, :file "resources/public/js/out/differ/patch.cljs", :end-column 18, :method-params ([state diff]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state diff])), :doc "Returns a new datastructure, containing the changes in the provided diff."}, removals {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/differ/patch.cljs", :line 84, :column 7, :end-line 84, :end-column 15, :arglists (quote ([state diff])), :doc "Returns a new datastructure, not containing the elements in the\n  provided diff."}, :name differ.patch/removals, :variadic false, :file "resources/public/js/out/differ/patch.cljs", :end-column 15, :method-params ([state diff]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state diff])), :doc "Returns a new datastructure, not containing the elements in the\n  provided diff."}, map-alterations {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/differ/patch.cljs", :line 12, :column 8, :end-line 12, :end-column 23, :private true, :arglists (quote ([state diff]))}, :private true, :name differ.patch/map-alterations, :variadic false, :file "resources/public/js/out/differ/patch.cljs", :end-column 23, :method-params ([state diff]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state diff]))}, vec-alterations {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/differ/patch.cljs", :line 21, :column 8, :end-line 21, :end-column 23, :private true, :arglists (quote ([state diff]))}, :private true, :name differ.patch/vec-alterations, :variadic false, :file "resources/public/js/out/differ/patch.cljs", :end-column 23, :method-params ([state diff]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state diff]))}, map-removals {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/differ/patch.cljs", :line 58, :column 8, :end-line 58, :end-column 20, :private true, :arglists (quote ([state diff]))}, :private true, :name differ.patch/map-removals, :variadic false, :file "resources/public/js/out/differ/patch.cljs", :end-column 20, :method-params ([state diff]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state diff]))}, vec-removals {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/differ/patch.cljs", :line 69, :column 8, :end-line 69, :end-column 20, :private true, :arglists (quote ([state diff]))}, :private true, :name differ.patch/vec-removals, :variadic false, :file "resources/public/js/out/differ/patch.cljs", :end-column 20, :method-params ([state diff]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state diff]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc "Use the functions in this namespace to apply diffs, created by functions\nin the differ.diff namespace, to similar datastructures."}