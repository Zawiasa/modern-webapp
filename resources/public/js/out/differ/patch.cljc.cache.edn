{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name differ.patch, :imports nil, :requires {set clojure.set, clojure.set clojure.set}, :cljs.spec/speced-vars [], :uses nil, :defs {alterations {:protocol-inline nil, :meta {:file "/home/aaron/github/modern-webapp/resources/public/js/out/differ/patch.cljc", :line 40, :column 7, :end-line 40, :end-column 18, :arglists (quote ([state diff])), :doc "Returns a new datastructure, containing the changes in the provided diff."}, :name differ.patch/alterations, :variadic false, :file "resources/public/js/out/differ/patch.cljc", :end-column 18, :method-params ([state diff]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state diff])), :doc "Returns a new datastructure, containing the changes in the provided diff."}, removals {:protocol-inline nil, :meta {:file "/home/aaron/github/modern-webapp/resources/public/js/out/differ/patch.cljc", :line 90, :column 7, :end-line 90, :end-column 15, :arglists (quote ([state diff])), :doc "Returns a new datastructure, not containing the elements in the\n  provided diff."}, :name differ.patch/removals, :variadic false, :file "resources/public/js/out/differ/patch.cljc", :end-column 15, :method-params ([state diff]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state diff])), :doc "Returns a new datastructure, not containing the elements in the\n  provided diff."}, map-alterations {:protocol-inline nil, :meta {:file "/home/aaron/github/modern-webapp/resources/public/js/out/differ/patch.cljc", :line 12, :column 8, :end-line 12, :end-column 23, :private true, :arglists (quote ([state diff]))}, :private true, :name differ.patch/map-alterations, :variadic false, :file "resources/public/js/out/differ/patch.cljc", :end-column 23, :method-params ([state diff]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state diff]))}, vec-alterations {:protocol-inline nil, :meta {:file "/home/aaron/github/modern-webapp/resources/public/js/out/differ/patch.cljc", :line 21, :column 8, :end-line 21, :end-column 23, :private true, :arglists (quote ([state diff]))}, :private true, :name differ.patch/vec-alterations, :variadic false, :file "resources/public/js/out/differ/patch.cljc", :end-column 23, :method-params ([state diff]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state diff]))}, map-removals {:protocol-inline nil, :meta {:file "/home/aaron/github/modern-webapp/resources/public/js/out/differ/patch.cljc", :line 62, :column 8, :end-line 62, :end-column 20, :private true, :arglists (quote ([state diff]))}, :private true, :name differ.patch/map-removals, :variadic false, :file "resources/public/js/out/differ/patch.cljc", :end-column 20, :method-params ([state diff]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state diff]))}, vec-removals {:protocol-inline nil, :meta {:file "/home/aaron/github/modern-webapp/resources/public/js/out/differ/patch.cljc", :line 73, :column 8, :end-line 73, :end-column 20, :private true, :arglists (quote ([state diff]))}, :private true, :name differ.patch/vec-removals, :variadic false, :file "resources/public/js/out/differ/patch.cljc", :end-column 20, :method-params ([state diff]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state diff]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc "Use the functions in this namespace to apply diffs, created by functions\n  in the differ.diff namespace, to similar datastructures."}