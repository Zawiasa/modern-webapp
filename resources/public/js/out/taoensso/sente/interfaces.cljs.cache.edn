;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name taoensso.sente.interfaces, :imports nil, :requires {enc taoensso.encore, taoensso.encore taoensso.encore}, :uses nil, :defs {IPacker {:meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/sente/interfaces.cljs", :line 39, :column 14, :end-line 39, :end-column 21, :doc "Extension pt. for client<->server comms data un/packers:\n  arbitrary Clojure data <-> serialized strings.", :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {pack [[_ x]], unpack [[_ x]]}}}, :protocol-symbol true, :name taoensso.sente.interfaces/IPacker, :file "resources/public/js/out/taoensso/sente/interfaces.cljs", :end-column 21, :column 1, :line 39, :protocol-info {:methods {pack [[_ x]], unpack [[_ x]]}}, :info nil, :end-line 39, :impls #{taoensso.sente.interfaces/EdnPacker}, :doc "Extension pt. for client<->server comms data un/packers:\n  arbitrary Clojure data <-> serialized strings.", :jsdoc ("@interface")}, pack {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/sente/interfaces.cljs", :line 42, :column 4, :end-line 42, :end-column 8, :protocol taoensso.sente.interfaces/IPacker, :doc nil, :arglists (quote ([_ x]))}, :protocol taoensso.sente.interfaces/IPacker, :name taoensso.sente.interfaces/pack, :variadic false, :file "resources/public/js/out/taoensso/sente/interfaces.cljs", :end-column 8, :method-params ([_ x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ x])), :doc nil}, unpack {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/sente/interfaces.cljs", :line 43, :column 4, :end-line 43, :end-column 10, :protocol taoensso.sente.interfaces/IPacker, :doc nil, :arglists (quote ([_ x]))}, :protocol taoensso.sente.interfaces/IPacker, :name taoensso.sente.interfaces/unpack, :variadic false, :file "resources/public/js/out/taoensso/sente/interfaces.cljs", :end-column 10, :method-params ([_ x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ x])), :doc nil}, EdnPacker {:num-fields 0, :protocols #{taoensso.sente.interfaces/IPacker}, :name taoensso.sente.interfaces/EdnPacker, :file "resources/public/js/out/taoensso/sente/interfaces.cljs", :end-column 19, :type true, :column 10, :line 45, :record false, :end-line 45, :skip-protocol-flag nil}, ->EdnPacker {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/sente/interfaces.cljs", :line 45, :column 10, :end-line 45, :end-column 19, :protocols #{taoensso.sente.interfaces/IPacker}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([]))}, :protocols #{taoensso.sente.interfaces/IPacker}, :name taoensso.sente.interfaces/->EdnPacker, :variadic false, :file "resources/public/js/out/taoensso/sente/interfaces.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :skip-protocol-flag nil}, edn-packer {:name taoensso.sente.interfaces/edn-packer, :file "resources/public/js/out/taoensso/sente/interfaces.cljs", :line 50, :column 1, :end-line 50, :end-column 20, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/sente/interfaces.cljs", :line 50, :column 10, :end-line 50, :end-column 20}, :doc "Default Edn packer."}, coerce-packer {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/sente/interfaces.cljs", :line 51, :column 7, :end-line 51, :end-column 20, :arglists (quote ([x]))}, :name taoensso.sente.interfaces/coerce-packer, :variadic false, :file "resources/public/js/out/taoensso/sente/interfaces.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}}, :require-macros {enc taoensso.encore, taoensso.encore taoensso.encore}, :cljs.analyzer/constants {:seen #{x satisfies? :edn IPacker}, :order [:edn satisfies? IPacker x]}, :doc "Experimental - subject to change!\n  Public interfaces / extension points."}