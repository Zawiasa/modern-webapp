;; Analyzed by ClojureScript 1.7.122
{:use-macros {have taoensso.encore, compile-if taoensso.encore, have? taoensso.encore, catch-errors taoensso.encore}, :excludes #{}, :name taoensso.encore, :imports nil, :requires {goog.net.XhrIoPool goog.net.XhrIoPool, gevents goog.events, set clojure.set, goog.net.XhrIo goog.net.XhrIo, gquery-data goog.Uri.QueryData, goog.string goog.string, goog.Uri.QueryData goog.Uri.QueryData, gobj goog.object, goog.object goog.object, gxhr-pool goog.net.XhrIoPool, goog.string.StringBuffer goog.string.StringBuffer, goog.net.EventType goog.net.EventType, clojure.set clojure.set, goog.structs goog.structs, goog.string.format goog.string.format, gstructs goog.structs, str clojure.string, clojure.string clojure.string, cljs.reader cljs.reader, gstr goog.string, edn cljs.reader, goog.events goog.events, goog.net.ErrorCode goog.net.ErrorCode, gxhr goog.net.XhrIo}, :uses nil, :defs {encore-version {:name taoensso.encore/encore-version, :file "resources/public/js/out/taoensso/encore.cljs", :line 43, :column 1, :end-line 43, :end-column 21, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 43, :column 7, :end-line 43, :end-column 21}, :doc "Used for lib-consumer version assertions"}, removev {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1182, :column 7, :end-line 1182, :end-column 14, :arglists (quote ([pred coll]))}, :name taoensso.encore/removev, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1182, :end-line 1182, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll]))}, nneg-int? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 270, :column 7, :end-line 270, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/nneg-int?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 270, :end-line 270, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, error? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 226, :column 13, :end-line 226, :end-column 19, :arglists (quote ([x]))}, :name taoensso.encore/error?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 7, :line 226, :end-line 226, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ->?singleton {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 773, :column 7, :end-line 773, :end-column 19, :arglists (quote ([coll]))}, :name taoensso.encore/->?singleton, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 773, :end-line 773, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}, set* {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 332, :column 7, :end-line 332, :end-column 11, :arglists (quote ([x]))}, :name taoensso.encore/set*, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 332, :end-line 332, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, sayp {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1901, :column 9, :end-line 1901, :end-column 13, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :name taoensso.encore/sayp, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1901, :end-line 1901, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, now-udt {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 677, :column 7, :end-line 677, :end-column 14, :arglists (quote ([]))}, :name taoensso.encore/now-udt, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 677, :end-line 677, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, as-?kw {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 286, :column 7, :end-line 286, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/as-?kw, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 286, :end-line 286, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, url-decode {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2147, :column 7, :end-line 2147, :end-column 17, :arglists (quote ([s & [encoding]])), :doc "Stolen from http://goo.gl/99NSR1.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [encoding])], :arglists ([s & [encoding]]), :arglists-meta (nil)}}, :name taoensso.encore/url-decode, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [encoding])], :arglists ([s & [encoding]]), :arglists-meta (nil)}, :method-params [(s [encoding])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 2147, :end-line 2147, :max-fixed-arity 1, :fn-var true, :arglists ([s & [encoding]]), :doc "Stolen from http://goo.gl/99NSR1."}, hcond {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 416, :column 7, :end-line 416, :end-column 12, :arglists (quote ([hard? ns-str line x_ x-form pred pred-form])), :doc "Implementation detail."}, :name taoensso.encore/hcond, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([hard? ns-str line x_ x-form pred pred-form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 416, :end-line 416, :max-fixed-arity 7, :fn-var true, :arglists (quote ([hard? ns-str line x_ x-form pred pred-form])), :doc "Implementation detail."}, parse-query-params {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2178, :column 7, :end-line 2178, :end-column 25, :arglists (quote ([s & [keywordize? encoding]])), :doc "Based on `ring-codec/form-decode`.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [keywordize? encoding])], :arglists ([s & [keywordize? encoding]]), :arglists-meta (nil)}}, :name taoensso.encore/parse-query-params, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [keywordize? encoding])], :arglists ([s & [keywordize? encoding]]), :arglists-meta (nil)}, :method-params [(s [keywordize? encoding])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 2178, :end-line 2178, :max-fixed-arity 1, :fn-var true, :arglists ([s & [keywordize? encoding]]), :doc "Based on `ring-codec/form-decode`."}, dissoc-in {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1025, :column 7, :end-line 1025, :end-column 16, :arglists (quote ([m ks & dissoc-ks])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(m ks dissoc-ks)], :arglists ([m ks & dissoc-ks]), :arglists-meta (nil)}}, :name taoensso.encore/dissoc-in, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(m ks dissoc-ks)], :arglists ([m ks & dissoc-ks]), :arglists-meta (nil)}, :method-params [(m ks dissoc-ks)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1025, :end-line 1025, :max-fixed-arity 2, :fn-var true, :arglists ([m ks & dissoc-ks])}, norm-word-breaks {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1429, :column 7, :end-line 1429, :end-column 23, :arglists (quote ([s])), :doc "Converts all word breaks of any form and length (including line breaks of any\n  form, tabs, spaces, etc.) to a single regular space."}, :name taoensso.encore/norm-word-breaks, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 23, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1429, :end-line 1429, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Converts all word breaks of any form and length (including line breaks of any\n  form, tabs, spaces, etc.) to a single regular space."}, rcompare {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1232, :column 7, :end-line 1232, :end-column 15, :arglists (quote ([x y])), :doc "Reverse comparator."}, :name taoensso.encore/rcompare, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1232, :end-line 1232, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :doc "Reverse comparator."}, Swapped {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name taoensso.encore/Swapped, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 875, :record true, :end-line 875, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ms {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 691, :column 7, :end-line 691, :end-column 9, :arglists (quote ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}])), :doc "Returns number of milliseconds in period defined by given args.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:as opts, :keys [years months weeks days hours mins secs msecs ms]})], :arglists ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}]), :arglists-meta (nil)}}, :name taoensso.encore/ms, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:as opts, :keys [years months weeks days hours mins secs msecs ms]})], :arglists ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}]), :arglists-meta (nil)}, :method-params [({:as opts, :keys [years months weeks days hours mins secs msecs ms]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 691, :end-line 691, :max-fixed-arity 0, :fn-var true, :arglists ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}]), :doc "Returns number of milliseconds in period defined by given args."}, str-ends-with? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1373, :column 7, :end-line 1373, :end-column 21, :arglists (quote ([s substr]))}, :name taoensso.encore/str-ends-with?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 21, :method-params ([s substr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1373, :end-line 1373, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s substr]))}, nested-merge {:name taoensso.encore/nested-merge, :file "resources/public/js/out/taoensso/encore.cljs", :line 1250, :column 1, :end-line 1250, :end-column 18, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1250, :column 6, :end-line 1250, :end-column 18}}, rate-limited {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2260, :column 7, :end-line 2260, :end-column 19, :arglists (quote ([ncalls-limit window-ms f]))}, :name taoensso.encore/rate-limited, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([ncalls-limit window-ms f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2260, :end-line 2260, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ncalls-limit window-ms f]))}, format-query-string {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2155, :column 7, :end-line 2155, :end-column 26, :arglists (quote ([m]))}, :name taoensso.encore/format-query-string, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 26, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2155, :end-line 2155, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, log {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1898, :column 9, :end-line 1898, :end-column 12, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :name taoensso.encore/log, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1898, :end-line 1898, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, nano-time {:name taoensso.encore/nano-time, :file "resources/public/js/out/taoensso/encore.cljs", :line 1824, :column 1, :end-line 1824, :end-column 15, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1824, :column 6, :end-line 1824, :end-column 15}}, clamp {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 620, :column 7, :end-line 620, :end-column 12, :arglists (quote ([nmin nmax n]))}, :name taoensso.encore/clamp, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([nmin nmax n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 620, :end-line 620, :max-fixed-arity 3, :fn-var true, :arglists (quote ([nmin nmax n]))}, memoized {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1551, :column 7, :end-line 1551, :end-column 15, :arglists (quote ([cache f & args])), :doc "Like `(memoize* f)` but takes an explicit cache atom (possibly nil)\n  and immediately applies memoized f to given arguments.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(cache f args)], :arglists ([cache f & args]), :arglists-meta (nil)}}, :name taoensso.encore/memoized, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(cache f args)], :arglists ([cache f & args]), :arglists-meta (nil)}, :method-params [(cache f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1551, :end-line 1551, :max-fixed-arity 2, :fn-var true, :arglists ([cache f & args]), :doc "Like `(memoize* f)` but takes an explicit cache atom (possibly nil)\n  and immediately applies memoized f to given arguments."}, log? {:name taoensso.encore/log?, :file "resources/public/js/out/taoensso/encore.cljs", :line 2272, :column 3, :end-line 2272, :end-column 22, :private true, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2272, :column 18, :end-line 2272, :end-column 22, :private true}}, greatest {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1265, :column 7, :end-line 1265, :end-column 15, :arglists (quote ([coll & [?comparator]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}}, :name taoensso.encore/greatest, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}, :method-params [(coll [?comparator])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1265, :end-line 1265, :max-fixed-arity 1, :fn-var true, :arglists ([coll & [?comparator]])}, merge-keywords {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 573, :column 7, :end-line 573, :end-column 21, :arglists (quote ([ks & [no-slash?]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(ks [no-slash?])], :arglists ([ks & [no-slash?]]), :arglists-meta (nil)}}, :name taoensso.encore/merge-keywords, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(ks [no-slash?])], :arglists ([ks & [no-slash?]]), :arglists-meta (nil)}, :method-params [(ks [no-slash?])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 573, :end-line 573, :max-fixed-arity 1, :fn-var true, :arglists ([ks & [no-slash?]])}, queue* {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1052, :column 7, :end-line 1052, :end-column 13, :arglists (quote ([& items])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(items)], :arglists ([& items]), :arglists-meta (nil)}}, :name taoensso.encore/queue*, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(items)], :arglists ([& items]), :arglists-meta (nil)}, :method-params [(items)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1052, :end-line 1052, :max-fixed-arity 0, :fn-var true, :arglists ([& items])}, atom? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 207, :column 7, :end-line 207, :end-column 12, :arglists (quote ([x]))}, :name taoensso.encore/atom?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 207, :end-line 207, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, chan? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 213, :column 9, :end-line 213, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/chan?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 213, :end-line 213, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, keywordize-map {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1105, :column 7, :end-line 1105, :end-column 21, :arglists (quote ([m]))}, :name taoensso.encore/keywordize-map, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 21, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1105, :end-line 1105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, subvec* {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 868, :column 7, :end-line 868, :end-column 14, :arglists (quote ([v start-idx & [?max-len]])), :doc "Like `subvec` but uses `sub-indexes`.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(v start-idx [?max-len])], :arglists ([v start-idx & [?max-len]]), :arglists-meta (nil)}}, :name taoensso.encore/subvec*, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(v start-idx [?max-len])], :arglists ([v start-idx & [?max-len]]), :arglists-meta (nil)}, :method-params [(v start-idx [?max-len])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 868, :end-line 868, :max-fixed-arity 2, :fn-var true, :arglists ([v start-idx & [?max-len]]), :doc "Like `subvec` but uses `sub-indexes`."}, logf {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1900, :column 9, :end-line 1900, :end-column 13, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/logf, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1900, :end-line 1900, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, reportf {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2282, :column 9, :end-line 2282, :end-column 16, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/reportf, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2282, :end-line 2282, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, str-?index {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1380, :column 7, :end-line 1380, :end-column 17, :arglists (quote ([s substr & [start-idx last?]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(s substr [start-idx last?])], :arglists ([s substr & [start-idx last?]]), :arglists-meta (nil)}}, :name taoensso.encore/str-?index, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(s substr [start-idx last?])], :arglists ([s substr & [start-idx last?]]), :arglists-meta (nil)}, :method-params [(s substr [start-idx last?])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1380, :end-line 1380, :max-fixed-arity 2, :fn-var true, :arglists ([s substr & [start-idx last?]])}, as-?name {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 287, :column 7, :end-line 287, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-?name, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 287, :end-line 287, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, udt? {:name taoensso.encore/udt?, :file "resources/public/js/out/taoensso/encore.cljs", :line 274, :column 1, :end-line 274, :end-column 10, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 274, :column 6, :end-line 274, :end-column 10}}, fatalf {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2281, :column 9, :end-line 2281, :end-column 15, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/fatalf, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2281, :end-line 2281, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, distinct-elements? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 277, :column 7, :end-line 277, :end-column 25, :arglists (quote ([x]))}, :name taoensso.encore/distinct-elements?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 25, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 277, :end-line 277, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nneg? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 268, :column 11, :end-line 268, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/nneg?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 268, :end-line 268, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, gc-now? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1518, :column 7, :end-line 1518, :end-column 14, :arglists (quote ([]))}, :name taoensso.encore/gc-now?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1518, :end-line 1518, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ajax-lite {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1947, :column 7, :end-line 1947, :end-column 16, :arglists (quote ([uri {:keys [method params headers timeout-ms resp-type with-credentials? progress-fn errorf], :as opts, :or {method :get, timeout-ms 10000, resp-type :auto, errorf logf}} callback])), :doc "Alpha - subject to change.\n  Simple+lightweight Ajax via Google Closure. Returns nil, or the xhr instance.\n  Ref. https://developers.google.com/closure/library/docs/xhrio.\n\n  (ajax-lite \"/my-post-route\"\n    {:method     :post\n     :params     {:username \"Rich Hickey\"\n                  :type     \"Awesome\"}\n     :headers    {\"Foo\" \"Bar\"}\n     :resp-type  :text\n     :timeout-ms 7000\n     :with-credentials? false ; Enable if using CORS (requires xhr v2+)\n    }\n    (fn async-callback [resp-map]\n      (let [{:keys [success? ?status ?error ?content ?content-type]} resp-map]\n        ;; ?status  - 200, 404, ..., or nil on no response\n        ;; ?error   - e/o #{:xhr-pool-depleted :exception :http-error :abort\n        ;;                  :timeout :no-content <http-error-status> nil}\n        (js/alert (str \"Ajax response: \" resp-map)))))"}, :name taoensso.encore/ajax-lite, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([uri p__31229 callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1947, :end-line 1947, :max-fixed-arity 3, :fn-var true, :arglists (quote ([uri {:keys [method params headers timeout-ms resp-type with-credentials? progress-fn errorf], :as opts, :or {method :get, timeout-ms 10000, resp-type :auto, errorf logf}} callback])), :doc "Alpha - subject to change.\n  Simple+lightweight Ajax via Google Closure. Returns nil, or the xhr instance.\n  Ref. https://developers.google.com/closure/library/docs/xhrio.\n\n  (ajax-lite \"/my-post-route\"\n    {:method     :post\n     :params     {:username \"Rich Hickey\"\n                  :type     \"Awesome\"}\n     :headers    {\"Foo\" \"Bar\"}\n     :resp-type  :text\n     :timeout-ms 7000\n     :with-credentials? false ; Enable if using CORS (requires xhr v2+)\n    }\n    (fn async-callback [resp-map]\n      (let [{:keys [success? ?status ?error ?content ?content-type]} resp-map]\n        ;; ?status  - 200, 404, ..., or nil on no response\n        ;; ?error   - e/o #{:xhr-pool-depleted :exception :http-error :abort\n        ;;                  :timeout :no-content <http-error-status> nil}\n        (js/alert (str \"Ajax response: \" resp-map)))))"}, distinct-by {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1169, :column 7, :end-line 1169, :end-column 18, :arglists (quote ([keyfn coll]))}, :name taoensso.encore/distinct-by, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([keyfn coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1169, :end-line 1169, :max-fixed-arity 2, :fn-var true, :arglists (quote ([keyfn coll]))}, nvec? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 271, :column 9, :end-line 271, :end-column 14, :arglists (quote ([n x]))}, :name taoensso.encore/nvec?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([n x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 271, :end-line 271, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n x]))}, path {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1409, :column 7, :end-line 1409, :end-column 11, :arglists (quote ([& parts])), :doc "Joins string paths (URLs, file paths, etc.) ensuring correct \"/\"\n  interposition.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(parts)], :arglists ([& parts]), :arglists-meta (nil)}}, :name taoensso.encore/path, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(parts)], :arglists ([& parts]), :arglists-meta (nil)}, :method-params [(parts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1409, :end-line 1409, :max-fixed-arity 0, :fn-var true, :arglists ([& parts]), :doc "Joins string paths (URLs, file paths, etc.) ensuring correct \"/\"\n  interposition."}, contains-in? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1024, :column 7, :end-line 1024, :end-column 19, :arglists (quote ([coll ks]))}, :name taoensso.encore/contains-in?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([coll ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1024, :end-line 1024, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll ks]))}, filter-kvs {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1085, :column 7, :end-line 1085, :end-column 17, :arglists (quote ([predk predv m]))}, :name taoensso.encore/filter-kvs, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 17, :method-params ([predk predv m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1085, :end-line 1085, :max-fixed-arity 3, :fn-var true, :arglists (quote ([predk predv m]))}, swap-in! {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 945, :column 7, :end-line 945, :end-column 15, :arglists (quote ([atom_ ks f] [atom_ ks f & more])), :doc "More powerful version of `swap!`:\n    * Supports optional `update-in` semantics.\n    * Swap fn can return `(swapped <new-val> <return-val>)` rather than just\n      <new-val>. This is useful when writing atomic pull fns, etc.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks f]), :arglists ([atom_ ks f] [atom_ ks f & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/swap-in!, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks f]), :arglists ([atom_ ks f] [atom_ ks f & more]), :arglists-meta (nil nil)}, :method-params ([atom_ ks f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 945, :end-line 945, :max-fixed-arity 3, :fn-var true, :arglists ([atom_ ks f] [atom_ ks f & more]), :doc "More powerful version of `swap!`:\n    * Supports optional `update-in` semantics.\n    * Swap fn can return `(swapped <new-val> <return-val>)` rather than just\n      <new-val>. This is useful when writing atomic pull fns, etc."}, warnf {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2279, :column 9, :end-line 2279, :end-column 14, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/warnf, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2279, :end-line 2279, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, memoize* {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1559, :column 7, :end-line 1559, :end-column 15, :arglists (quote ([f] [ttl-ms f] [cache-size ttl-ms f])), :doc "Like `clojure.core/memoize` but:\n    * Uses delays to prevent race conditions on writes.\n    * Supports auto invalidation & gc with `ttl-ms` option.\n    * Supports manual invalidation by prepending args with `:mem/del` or `:mem/fresh`.\n    * Supports cache size limit & gc with `cache-size` option.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/memoize*, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists-meta (nil nil nil)}, :method-params ([f] [ttl-ms f] [cache-size ttl-ms f]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 1559, :end-line 1559, :max-fixed-arity 3, :fn-var true, :arglists ([f] [ttl-ms f] [cache-size ttl-ms f]), :doc "Like `clojure.core/memoize` but:\n    * Uses delays to prevent race conditions on writes.\n    * Supports auto invalidation & gc with `ttl-ms` option.\n    * Supports manual invalidation by prepending args with `:mem/del` or `:mem/fresh`.\n    * Supports cache size limit & gc with `cache-size` option."}, as-?nemail {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 318, :column 7, :end-line 318, :end-column 17, :arglists (quote ([?s]))}, :name taoensso.encore/as-?nemail, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 17, :method-params ([?s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 318, :max-fixed-arity 1, :fn-var true, :arglists (quote ([?s]))}, as-?email {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 317, :column 7, :end-line 317, :end-column 16, :arglists (quote ([?s]))}, :name taoensso.encore/as-?email, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([?s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 317, :end-line 317, :max-fixed-arity 1, :fn-var true, :arglists (quote ([?s]))}, spaced-str {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1316, :column 7, :end-line 1316, :end-column 17, :arglists (quote ([xs]))}, :name taoensso.encore/spaced-str, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 17, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1316, :end-line 1316, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xs]))}, merge-deep {:name taoensso.encore/merge-deep, :file "resources/public/js/out/taoensso/encore.cljs", :line 2256, :column 1, :end-line 2256, :end-column 16, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2256, :column 6, :end-line 2256, :end-column 16}}, hthrow {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 351, :column 7, :end-line 351, :end-column 13, :arglists (quote ([hard? ns-str ?line form val & [?err]])), :doc "Implementation detail.", :top-fn {:variadic true, :max-fixed-arity 5, :method-params [(hard? ns-str ?line form val [?err])], :arglists ([hard? ns-str ?line form val & [?err]]), :arglists-meta (nil)}}, :name taoensso.encore/hthrow, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 5, :method-params [(hard? ns-str ?line form val [?err])], :arglists ([hard? ns-str ?line form val & [?err]]), :arglists-meta (nil)}, :method-params [(hard? ns-str ?line form val [?err])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 351, :end-line 351, :max-fixed-arity 5, :fn-var true, :arglists ([hard? ns-str ?line form val & [?err]]), :doc "Implementation detail."}, join-once {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1391, :column 7, :end-line 1391, :end-column 16, :arglists (quote ([separator & coll])), :doc "Like `clojure.string/join` but ensures no double separators.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(separator coll)], :arglists ([separator & coll]), :arglists-meta (nil)}}, :name taoensso.encore/join-once, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(separator coll)], :arglists ([separator & coll]), :arglists-meta (nil)}, :method-params [(separator coll)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1391, :end-line 1391, :max-fixed-arity 1, :fn-var true, :arglists ([separator & coll]), :doc "Like `clojure.string/join` but ensures no double separators."}, console-log {:name taoensso.encore/console-log, :file "resources/public/js/out/taoensso/encore.cljs", :line 1893, :column 3, :end-line 1893, :end-column 29, :private true, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1893, :column 18, :end-line 1893, :end-column 29, :private true}}, oget {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 765, :column 7, :end-line 765, :end-column 11, :arglists (quote ([o k] [o k1 k2] [o k1 k2 & ks])), :doc "Like `aget` for JS objects, Ref. https://goo.gl/eze8hY. Unlike `aget`,\n  returns nil for missing keys instead of throwing.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([o k] [o k1 k2]), :arglists ([o k] [o k1 k2] [o k1 k2 & ks]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/oget, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([o k] [o k1 k2]), :arglists ([o k] [o k1 k2] [o k1 k2 & ks]), :arglists-meta (nil nil nil)}, :method-params ([o k] [o k1 k2]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 765, :end-line 765, :max-fixed-arity 3, :fn-var true, :arglists ([o k] [o k1 k2] [o k1 k2 & ks]), :doc "Like `aget` for JS objects, Ref. https://goo.gl/eze8hY. Unlike `aget`,\n  returns nil for missing keys instead of throwing."}, get-window-location {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1905, :column 7, :end-line 1905, :end-column 26, :arglists (quote ([])), :doc "Returns browser window's current location. Forgeable."}, :name taoensso.encore/get-window-location, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1905, :end-line 1905, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns browser window's current location. Forgeable."}, format {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1328, :column 7, :end-line 1328, :end-column 13, :arglists (quote ([fmt & args])), :doc "Like `clojure.core/format` but:\n    * Returns \"\" when fmt is nil rather than throwing an NPE.\n    * Formats nil as \"nil\" rather than \"null\".\n    * Provides ClojureScript support via goog.string.format (this has fewer\n      formatting options than Clojure's `format`!).", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}}, :name taoensso.encore/format, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}, :method-params [(fmt args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1328, :end-line 1328, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & args]), :doc "Like `clojure.core/format` but:\n    * Returns \"\" when fmt is nil rather than throwing an NPE.\n    * Formats nil as \"nil\" rather than \"null\".\n    * Provides ClojureScript support via goog.string.format (this has fewer\n      formatting options than Clojure's `format`!)."}, as-int {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2252, :column 7, :end-line 2252, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/as-int, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2252, :end-line 2252, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nnil-set {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 785, :column 7, :end-line 785, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/nnil-set, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 785, :end-line 785, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, singleton? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 772, :column 9, :end-line 772, :end-column 19, :arglists (quote ([coll]))}, :name taoensso.encore/singleton?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 772, :end-line 772, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}, swapped {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 876, :column 12, :end-line 876, :end-column 19, :arglists (quote ([new-val return-val]))}, :name taoensso.encore/swapped, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([new-val return-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 876, :end-line 876, :max-fixed-arity 2, :fn-var true, :arglists (quote ([new-val return-val]))}, logging-level {:name taoensso.encore/logging-level, :file "resources/public/js/out/taoensso/encore.cljs", :line 2232, :column 1, :end-line 2232, :end-column 19, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2232, :column 6, :end-line 2232, :end-column 19}}, sub-indexes {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 822, :column 7, :end-line 822, :end-column 18, :arglists (quote ([x start-idx & {:keys [max-len end-idx]}])), :doc "Returns [<inclusive-start-idx*> <exclusive-end-idx*>] for counted 0-indexed\n  input (str, vec, etc.) with support for:\n    * Clamping of indexes beyond limits.\n    * Max-length -> end-index.\n    * -ive indexes (as +ive indexes but work from back of input):\n      (+0) (+1) (+2) (+3) (+4)  ; inclusive +ive indexes\n        h    e    l    l    o   ; 5 count\n      (-5) (-4) (-3) (-2) (-1)  ; inclusive -ive indexes", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(x start-idx {:keys [max-len end-idx]})], :arglists ([x start-idx & {:keys [max-len end-idx]}]), :arglists-meta (nil)}}, :name taoensso.encore/sub-indexes, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(x start-idx {:keys [max-len end-idx]})], :arglists ([x start-idx & {:keys [max-len end-idx]}]), :arglists-meta (nil)}, :method-params [(x start-idx {:keys [max-len end-idx]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 822, :end-line 822, :max-fixed-arity 2, :fn-var true, :arglists ([x start-idx & {:keys [max-len end-idx]}]), :doc "Returns [<inclusive-start-idx*> <exclusive-end-idx*>] for counted 0-indexed\n  input (str, vec, etc.) with support for:\n    * Clamping of indexes beyond limits.\n    * Max-length -> end-index.\n    * -ive indexes (as +ive indexes but work from back of input):\n      (+0) (+1) (+2) (+3) (+4)  ; inclusive +ive indexes\n        h    e    l    l    o   ; 5 count\n      (-5) (-4) (-3) (-2) (-1)  ; inclusive -ive indexes"}, undefined->nil {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1308, :column 14, :end-line 1308, :end-column 28, :arglists (quote ([x]))}, :name taoensso.encore/undefined->nil, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 28, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 8, :line 1308, :end-line 1308, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, now-dt {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 676, :column 8, :end-line 676, :end-column 14, :arglists (quote ([]))}, :name taoensso.encore/now-dt, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 676, :end-line 676, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, repeatedly-into {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1275, :column 7, :end-line 1275, :end-column 22, :arglists (quote ([coll n f])), :doc "Like `repeatedly` but faster and `conj`s items into given collection."}, :name taoensso.encore/repeatedly-into, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 22, :method-params ([coll n f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1275, :end-line 1275, :max-fixed-arity 3, :fn-var true, :arglists (quote ([coll n f])), :doc "Like `repeatedly` but faster and `conj`s items into given collection."}, coerce-xhr-params {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1933, :column 8, :end-line 1933, :end-column 25, :private true, :arglists (quote ([uri method params])), :doc "[uri method get-or-post-params] -> [uri post-content]"}, :private true, :name taoensso.encore/coerce-xhr-params, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 25, :method-params ([uri method params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1933, :end-line 1933, :max-fixed-arity 3, :fn-var true, :arglists (quote ([uri method params])), :doc "[uri method get-or-post-params] -> [uri post-content]"}, nnil? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 266, :column 11, :end-line 266, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/nnil?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 266, :end-line 266, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, memoize_ {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1531, :column 7, :end-line 1531, :end-column 15, :arglists (quote ([f])), :doc "As `clojure.core/memoize` but uses delays to avoid write races."}, :name taoensso.encore/memoize_, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1531, :end-line 1531, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :doc "As `clojure.core/memoize` but uses delays to avoid write races."}, memoize-1 {:name taoensso.encore/memoize-1, :file "resources/public/js/out/taoensso/encore.cljs", :line 2224, :column 1, :end-line 2224, :end-column 15, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2224, :column 6, :end-line 2224, :end-column 15}}, str-contains? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1365, :column 7, :end-line 1365, :end-column 20, :arglists (quote ([s substr]))}, :name taoensso.encore/str-contains?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 20, :method-params ([s substr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1365, :end-line 1365, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s substr]))}, swapped? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 877, :column 12, :end-line 877, :end-column 20, :arglists (quote ([x]))}, :name taoensso.encore/swapped?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 877, :end-line 877, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, filter-vals {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1090, :column 7, :end-line 1090, :end-column 18, :arglists (quote ([pred m]))}, :name taoensso.encore/filter-vals, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1090, :end-line 1090, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m]))}, ks-nnil? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 338, :column 7, :end-line 338, :end-column 15, :arglists (quote ([ks m]))}, :name taoensso.encore/ks-nnil?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 338, :end-line 338, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, update-in* {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 803, :column 7, :end-line 803, :end-column 17, :arglists (quote ([m ks f])), :doc "Like `update-in` but faster, more flexible, and simpler (less ambiguous)."}, :name taoensso.encore/update-in*, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 17, :method-params ([m ks f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 803, :end-line 803, :max-fixed-arity 3, :fn-var true, :arglists (quote ([m ks f])), :doc "Like `update-in` but faster, more flexible, and simpler (less ambiguous)."}, *log-level* {:name taoensso.encore/*log-level*, :file "resources/public/js/out/taoensso/encore.cljs", :line 2271, :column 3, :end-line 2271, :end-column 45, :dynamic true, :doc "DEPRECATED", :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2271, :column 34, :end-line 2271, :end-column 45, :dynamic true, :doc "DEPRECATED"}}, takev {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1181, :column 7, :end-line 1181, :end-column 12, :arglists (quote ([n coll]))}, :name taoensso.encore/takev, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([n coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1181, :end-line 1181, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n coll]))}, count-words {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1434, :column 7, :end-line 1434, :end-column 18, :arglists (quote ([s]))}, :name taoensso.encore/count-words, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1434, :end-line 1434, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, ms->secs {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 690, :column 7, :end-line 690, :end-column 15, :arglists (quote ([ms]))}, :name taoensso.encore/ms->secs, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 690, :end-line 690, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ms]))}, mapply {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1061, :column 7, :end-line 1061, :end-column 13, :arglists (quote ([f & args])), :doc "Like `apply` but assumes last arg is a map whose elements should be applied\n  to `f` as an unpaired seq:\n    (mapply (fn [x & {:keys [y z]}] (str x y z)) 1 {:y 2 :z 3})\n      where fn will receive args as: `(1 :y 2 :z 3)`.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}}, :name taoensso.encore/mapply, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}, :method-params [(f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1061, :end-line 1061, :max-fixed-arity 1, :fn-var true, :arglists ([f & args]), :doc "Like `apply` but assumes last arg is a map whose elements should be applied\n  to `f` as an unpaired seq:\n    (mapply (fn [x & {:keys [y z]}] (str x y z)) 1 {:y 2 :z 3})\n      where fn will receive args as: `(1 :y 2 :z 3)`."}, rate-limit {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1809, :column 7, :end-line 1809, :end-column 17, :arglists (quote ([specs f]))}, :name taoensso.encore/rate-limit, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 17, :method-params ([specs f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1809, :end-line 1809, :max-fixed-arity 2, :fn-var true, :arglists (quote ([specs f]))}, error-data {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 229, :column 7, :end-line 229, :end-column 17, :arglists (quote ([x])), :doc "Returns data map iff `x` is an error of any type on platform."}, :name taoensso.encore/error-data, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 229, :end-line 229, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns data map iff `x` is an error of any type on platform."}, map->Swapped {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 875, :column 12, :end-line 875, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__30837]))}, :name taoensso.encore/map->Swapped, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([G__30837]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 875, :end-line 875, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30837]))}, queue {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1047, :column 7, :end-line 1047, :end-column 12, :arglists (quote ([] [coll])), :doc "Returns a PersistentQueue.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [coll]), :arglists ([] [coll]), :arglists-meta (nil nil)}}, :name taoensso.encore/queue, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [coll]), :arglists ([] [coll]), :arglists-meta (nil nil)}, :method-params ([] [coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1047, :end-line 1047, :max-fixed-arity 1, :fn-var true, :arglists ([] [coll]), :doc "Returns a PersistentQueue."}, read-edn-str {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 58, :column 7, :end-line 58, :end-column 19, :arglists (quote ([s]))}, :name taoensso.encore/read-edn-str, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, reset-in! {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 976, :column 7, :end-line 976, :end-column 16, :arglists (quote ([atom_ ks new-val] [atom_ ks new-val & more])), :doc "Is to `reset!` as `swap-in!` is to `swap!`.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks new-val]), :arglists ([atom_ ks new-val] [atom_ ks new-val & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/reset-in!, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks new-val]), :arglists ([atom_ ks new-val] [atom_ ks new-val & more]), :arglists-meta (nil nil)}, :method-params ([atom_ ks new-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 976, :end-line 976, :max-fixed-arity 3, :fn-var true, :arglists ([atom_ ks new-val] [atom_ ks new-val & more]), :doc "Is to `reset!` as `swap-in!` is to `swap!`."}, format* {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1318, :column 7, :end-line 1318, :end-column 14, :arglists (quote ([fmt args]))}, :name taoensso.encore/format*, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([fmt args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1318, :end-line 1318, :max-fixed-arity 2, :fn-var true, :arglists (quote ([fmt args]))}, remove-vals {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1094, :column 7, :end-line 1094, :end-column 18, :arglists (quote ([pred m])), :doc "Smaller, common-case version of `filter-vals`. Esp useful with `nil?`/`blank?`\n  pred when constructing maps: {:foo (when _ <...>) :bar (when _ <...>)} in a\n  way that preservers :or semantics."}, :name taoensso.encore/remove-vals, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1094, :end-line 1094, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m])), :doc "Smaller, common-case version of `filter-vals`. Esp useful with `nil?`/`blank?`\n  pred when constructing maps: {:foo (when _ <...>) :bar (when _ <...>)} in a\n  way that preservers :or semantics."}, round* {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 630, :column 7, :end-line 630, :end-column 13, :arglists (quote ([n] [type n] [type nplaces n])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([n] [type n] [type nplaces n]), :arglists ([n] [type n] [type nplaces n]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/round*, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([n] [type n] [type nplaces n]), :arglists ([n] [type n] [type nplaces n]), :arglists-meta (nil nil nil)}, :method-params ([n] [type n] [type nplaces n]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 630, :end-line 630, :max-fixed-arity 3, :fn-var true, :arglists ([n] [type n] [type nplaces n])}, pos-num? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 282, :column 10, :end-line 282, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/pos-num?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 282, :end-line 282, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, stringy? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 206, :column 7, :end-line 206, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/stringy?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, vec2? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 275, :column 7, :end-line 275, :end-column 12, :arglists (quote ([x]))}, :name taoensso.encore/vec2?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 275, :end-line 275, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, parse-float {:name taoensso.encore/parse-float, :file "resources/public/js/out/taoensso/encore.cljs", :line 2250, :column 1, :end-line 2250, :end-column 17, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2250, :column 6, :end-line 2250, :end-column 17}}, vsplit-last {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 776, :column 7, :end-line 776, :end-column 18, :arglists (quote ([v]))}, :name taoensso.encore/vsplit-last, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 776, :end-line 776, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, rsome {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 799, :column 7, :end-line 799, :end-column 12, :arglists (quote ([pred coll])), :doc "Faster `some` based on `reduce`."}, :name taoensso.encore/rsome, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 799, :end-line 799, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll])), :doc "Faster `some` based on `reduce`."}, re-pattern? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 220, :column 7, :end-line 220, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/re-pattern?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 220, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, as-?int {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 299, :column 7, :end-line 299, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/as-?int, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 299, :end-line 299, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ks<= {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 336, :column 7, :end-line 336, :end-column 11, :arglists (quote ([ks m]))}, :name taoensso.encore/ks<=, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 11, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 336, :end-line 336, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, name-with-attrs {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 96, :column 7, :end-line 96, :end-column 22, :arglists (quote ([name macro-args])), :doc "Handles optional docstrings & attr maps for a macro def's name.\n  Stolen from `clojure.tools.macro`."}, :name taoensso.encore/name-with-attrs, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 22, :method-params ([name macro-args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name macro-args])), :doc "Handles optional docstrings & attr maps for a macro def's name.\n  Stolen from `clojure.tools.macro`."}, pow {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 628, :column 7, :end-line 628, :end-column 10, :arglists (quote ([n exp]))}, :name taoensso.encore/pow, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 10, :method-params ([n exp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 628, :end-line 628, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n exp]))}, named? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 208, :column 7, :end-line 208, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/named?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 208, :end-line 208, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, exp-backoff {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 664, :column 7, :end-line 664, :end-column 18, :arglists (quote ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]])), :doc "Returns binary exponential backoff value.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nattempt [{:keys [factor], min' :min, max' :max, :or {factor 1000}}])], :arglists ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]]), :arglists-meta (nil)}}, :name taoensso.encore/exp-backoff, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nattempt [{:keys [factor], min' :min, max' :max, :or {factor 1000}}])], :arglists ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]]), :arglists-meta (nil)}, :method-params [(nattempt [{:keys [factor], min' :min, max' :max, :or {factor 1000}}])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 664, :end-line 664, :max-fixed-arity 1, :fn-var true, :arglists ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]]), :doc "Returns binary exponential backoff value."}, swap-val! {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1520, :column 7, :end-line 1520, :end-column 16, :arglists (quote ([atom_ k f])), :doc "Swaps associative value at key and returns the new value.\n  Specialized, fast `swap-in!` for use mostly by memoization utils."}, :name taoensso.encore/swap-val!, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([atom_ k f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1520, :end-line 1520, :max-fixed-arity 3, :fn-var true, :arglists (quote ([atom_ k f])), :doc "Swaps associative value at key and returns the new value.\n  Specialized, fast `swap-in!` for use mostly by memoization utils."}, map-keys {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1082, :column 7, :end-line 1082, :end-column 15, :arglists (quote ([f m]))}, :name taoensso.encore/map-keys, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([f m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1082, :end-line 1082, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f m]))}, substr {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1354, :column 7, :end-line 1354, :end-column 13, :arglists (quote ([s start-idx & [?max-len]])), :doc "Gives a consistent, flexible, cross-platform substring API built on\n  `sub-indexes`.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(s start-idx [?max-len])], :arglists ([s start-idx & [?max-len]]), :arglists-meta (nil)}}, :name taoensso.encore/substr, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(s start-idx [?max-len])], :arglists ([s start-idx & [?max-len]]), :arglists-meta (nil)}, :method-params [(s start-idx [?max-len])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1354, :end-line 1354, :max-fixed-arity 2, :fn-var true, :arglists ([s start-idx & [?max-len]]), :doc "Gives a consistent, flexible, cross-platform substring API built on\n  `sub-indexes`."}, conj-some {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 786, :column 7, :end-line 786, :end-column 16, :arglists (quote ([] [coll] [coll ?x] [coll ?x & ?xs])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [coll] [coll ?x]), :arglists ([] [coll] [coll ?x] [coll ?x & ?xs]), :arglists-meta (nil nil nil nil)}}, :name taoensso.encore/conj-some, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [coll] [coll ?x]), :arglists ([] [coll] [coll ?x] [coll ?x & ?xs]), :arglists-meta (nil nil nil nil)}, :method-params ([] [coll] [coll ?x]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 786, :end-line 786, :max-fixed-arity 2, :fn-var true, :arglists ([] [coll] [coll ?x] [coll ?x & ?xs])}, into-all {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1145, :column 7, :end-line 1145, :end-column 15, :arglists (quote ([to from] [to from & more])), :doc "Like `into` but supports multiple \"from\"s.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([to from]), :arglists ([to from] [to from & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/into-all, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([to from]), :arglists ([to from] [to from & more]), :arglists-meta (nil nil)}, :method-params ([to from]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1145, :end-line 1145, :max-fixed-arity 2, :fn-var true, :arglists ([to from] [to from & more]), :doc "Like `into` but supports multiple \"from\"s."}, secs {:name taoensso.encore/secs, :file "resources/public/js/out/taoensso/encore.cljs", :line 710, :column 1, :end-line 710, :end-column 10, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 710, :column 6, :end-line 710, :end-column 10}}, nil->str {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1309, :column 7, :end-line 1309, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/nil->str, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1309, :end-line 1309, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, interleave-all {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1149, :column 7, :end-line 1149, :end-column 21, :arglists (quote ([] [c1] [c1 c2] [c1 c2 & colls])), :doc "Greedy version of `interleave`, Ref. http://goo.gl/KvzqWb.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [c1] [c1 c2]), :arglists ([] [c1] [c1 c2] [c1 c2 & colls]), :arglists-meta (nil nil nil nil)}}, :name taoensso.encore/interleave-all, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [c1] [c1 c2]), :arglists ([] [c1] [c1 c2] [c1 c2 & colls]), :arglists-meta (nil nil nil nil)}, :method-params ([] [c1] [c1 c2]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 1149, :end-line 1149, :max-fixed-arity 2, :fn-var true, :arglists ([] [c1] [c1 c2] [c1 c2 & colls]), :doc "Greedy version of `interleave`, Ref. http://goo.gl/KvzqWb."}, swapped*-in {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 889, :column 8, :end-line 889, :end-column 19, :private true, :arglists (quote ([m ks f])), :doc "[<new-val> <return-val>]"}, :private true, :name taoensso.encore/swapped*-in, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([m ks f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 889, :end-line 889, :max-fixed-arity 3, :fn-var true, :arglists (quote ([m ks f])), :doc "[<new-val> <return-val>]"}, merge-url-with-query-string {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2201, :column 7, :end-line 2201, :end-column 34, :arglists (quote ([url m]))}, :name taoensso.encore/merge-url-with-query-string, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 34, :method-params ([url m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2201, :end-line 2201, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url m]))}, kw-identical? {:name taoensso.encore/kw-identical?, :file "resources/public/js/out/taoensso/encore.cljs", :line 200, :column 8, :end-line 200, :end-column 27, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 200, :column 14, :end-line 200, :end-column 27}}, assoc-conj {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2173, :column 8, :end-line 2173, :end-column 18, :private true, :arglists (quote ([m k v]))}, :private true, :name taoensso.encore/assoc-conj, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([m k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2173, :end-line 2173, :max-fixed-arity 3, :fn-var true, :arglists (quote ([m k v]))}, swapped* {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 878, :column 12, :end-line 878, :end-column 20, :arglists (quote ([x]))}, :name taoensso.encore/swapped*, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 878, :end-line 878, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, url-encode {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2132, :column 7, :end-line 2132, :end-column 17, :arglists (quote ([s])), :doc "Stolen from http://goo.gl/99NSR1."}, :name taoensso.encore/url-encode, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 17, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2132, :end-line 2132, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Stolen from http://goo.gl/99NSR1."}, qname {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 561, :column 7, :end-line 561, :end-column 12, :arglists (quote ([x])), :doc "Like `name` but includes keyword namespaces in name string."}, :name taoensso.encore/qname, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 561, :end-line 561, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Like `name` but includes keyword namespaces in name string."}, fzipmap {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1134, :column 7, :end-line 1134, :end-column 14, :arglists (quote ([ks vs])), :doc "Faster `zipmap` using transients."}, :name taoensso.encore/fzipmap, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([ks vs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1134, :end-line 1134, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks vs])), :doc "Faster `zipmap` using transients."}, fq-name {:name taoensso.encore/fq-name, :file "resources/public/js/out/taoensso/encore.cljs", :line 2219, :column 1, :end-line 2219, :end-column 13, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2219, :column 6, :end-line 2219, :end-column 13}}, keys>= {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2244, :column 7, :end-line 2244, :end-column 13, :arglists (quote ([m ks]))}, :name taoensso.encore/keys>=, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2244, :end-line 2244, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, distinctv {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1183, :column 7, :end-line 1183, :end-column 16, :arglists (quote ([coll] [keyfn coll])), :doc "Prefer `set` when order doesn't matter (much faster).", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coll] [keyfn coll]), :arglists ([coll] [keyfn coll]), :arglists-meta (nil nil)}}, :name taoensso.encore/distinctv, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coll] [keyfn coll]), :arglists ([coll] [keyfn coll]), :arglists-meta (nil nil)}, :method-params ([coll] [keyfn coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1183, :end-line 1183, :max-fixed-arity 2, :fn-var true, :arglists ([coll] [keyfn coll]), :doc "Prefer `set` when order doesn't matter (much faster)."}, filter-keys {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1089, :column 7, :end-line 1089, :end-column 18, :arglists (quote ([pred m]))}, :name taoensso.encore/filter-keys, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1089, :end-line 1089, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m]))}, queue? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1043, :column 7, :end-line 1043, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/queue?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1043, :end-line 1043, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, debugf {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2277, :column 9, :end-line 2277, :end-column 15, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/debugf, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2277, :end-line 2277, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, get-pooled-xhr! {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1925, :column 8, :end-line 1925, :end-column 23, :private true, :arglists (quote ([])), :doc "Returns an immediately available XhrIo instance, or nil. The instance must be\n  released back to pool manually."}, :private true, :name taoensso.encore/get-pooled-xhr!, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1925, :end-line 1925, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns an immediately available XhrIo instance, or nil. The instance must be\n  released back to pool manually."}, pr-edn {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 65, :column 8, :end-line 65, :end-column 14, :arglists (quote ([x] [opts x])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [opts x]), :arglists ([x] [opts x]), :arglists-meta (nil nil)}}, :name taoensso.encore/pr-edn, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [opts x]), :arglists ([x] [opts x]), :arglists-meta (nil nil)}, :method-params ([x] [opts x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists ([x] [opts x])}, ks= {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 335, :column 7, :end-line 335, :end-column 10, :arglists (quote ([ks m]))}, :name taoensso.encore/ks=, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 10, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 335, :end-line 335, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, nnil= {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 323, :column 7, :end-line 323, :end-column 12, :arglists (quote ([x y] [x y & more])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([x y]), :arglists ([x y] [x y & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/nnil=, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([x y]), :arglists ([x y] [x y & more]), :arglists-meta (nil nil)}, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 323, :end-line 323, :max-fixed-arity 2, :fn-var true, :arglists ([x y] [x y & more])}, now-udt-mock-fn {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 681, :column 7, :end-line 681, :end-column 22, :arglists (quote ([& [mock-udts]])), :doc "Useful for testing.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([mock-udts])], :arglists ([& [mock-udts]]), :arglists-meta (nil)}}, :name taoensso.encore/now-udt-mock-fn, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([mock-udts])], :arglists ([& [mock-udts]]), :arglists-meta (nil)}, :method-params [([mock-udts])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 681, :end-line 681, :max-fixed-arity 0, :fn-var true, :arglists ([& [mock-udts]]), :doc "Useful for testing."}, tracef {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2276, :column 9, :end-line 2276, :end-column 15, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/tracef, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2276, :end-line 2276, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, xhr-pool_ {:name taoensso.encore/xhr-pool_, :file "resources/public/js/out/taoensso/encore.cljs", :line 1923, :column 8, :end-line 1923, :end-column 32, :private true, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1923, :column 23, :end-line 1923, :end-column 32, :private true}}, rate-limiter* {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1718, :column 7, :end-line 1718, :end-column 20, :arglists (quote ([specs])), :doc "Takes one or more rate specs of form [ncalls-limit window-ms ?spec-id] and\n  returns a (fn [& [req-id])) that returns `nil` (=> all rate limits passed), or\n  [<ms-wait> <worst-offending-spec-id>] / <ms-wait>."}, :name taoensso.encore/rate-limiter*, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 20, :method-params ([specs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1718, :end-line 1718, :max-fixed-arity 1, :fn-var true, :arglists (quote ([specs])), :doc "Takes one or more rate specs of form [ncalls-limit window-ms ?spec-id] and\n  returns a (fn [& [req-id])) that returns `nil` (=> all rate limits passed), or\n  [<ms-wait> <worst-offending-spec-id>] / <ms-wait>."}, as-float {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2253, :column 7, :end-line 2253, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-float, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2253, :end-line 2253, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, infof {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2278, :column 9, :end-line 2278, :end-column 14, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/infof, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2278, :end-line 2278, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, nneg-num? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 281, :column 9, :end-line 281, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/nneg-num?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :end-line 281, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, zero-num? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 283, :column 9, :end-line 283, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/zero-num?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 283, :end-line 283, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, secs->ms {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 689, :column 7, :end-line 689, :end-column 15, :arglists (quote ([secs]))}, :name taoensso.encore/secs->ms, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([secs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 689, :end-line 689, :max-fixed-arity 1, :fn-var true, :arglists (quote ([secs]))}, read-edn {:name taoensso.encore/read-edn, :file "resources/public/js/out/taoensso/encore.cljs", :line 64, :column 1, :end-line 64, :end-column 14, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 64, :column 6, :end-line 64, :end-column 14}}, str-starts-with? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1369, :column 7, :end-line 1369, :end-column 23, :arglists (quote ([s substr]))}, :name taoensso.encore/str-starts-with?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 23, :method-params ([s substr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1369, :end-line 1369, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s substr]))}, round {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2222, :column 7, :end-line 2222, :end-column 12, :arglists (quote ([n & [type nplaces]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(n [type nplaces])], :arglists ([n & [type nplaces]]), :arglists-meta (nil)}}, :name taoensso.encore/round, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(n [type nplaces])], :arglists ([n & [type nplaces]]), :arglists-meta (nil)}, :method-params [(n [type nplaces])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 2222, :end-line 2222, :max-fixed-arity 1, :fn-var true, :arglists ([n & [type nplaces]])}, ->Swapped {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 875, :column 12, :end-line 875, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([new-val return-val]))}, :name taoensso.encore/->Swapped, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([new-val return-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 875, :end-line 875, :max-fixed-arity 2, :fn-var true, :arglists (quote ([new-val return-val]))}, rate-limiter {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2259, :column 7, :end-line 2259, :end-column 19, :arglists (quote ([ncalls-limit window-ms]))}, :name taoensso.encore/rate-limiter, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([ncalls-limit window-ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2259, :end-line 2259, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ncalls-limit window-ms]))}, sayf {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1902, :column 9, :end-line 1902, :end-column 13, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/sayf, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1902, :end-line 1902, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, least {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1269, :column 7, :end-line 1269, :end-column 12, :arglists (quote ([coll & [?comparator]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}}, :name taoensso.encore/least, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}, :method-params [(coll [?comparator])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1269, :end-line 1269, :max-fixed-arity 1, :fn-var true, :arglists ([coll & [?comparator]])}, nblank-str? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 280, :column 7, :end-line 280, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/nblank-str?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 280, :end-line 280, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, uuid-str {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1437, :column 7, :end-line 1437, :end-column 15, :arglists (quote ([max-length] [])), :doc "Returns a UUIDv4 string of form \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",\n  Ref. http://www.ietf.org/rfc/rfc4122.txt,\n       https://gist.github.com/franks42/4159427", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([max-length] []), :arglists ([max-length] []), :arglists-meta (nil nil)}}, :name taoensso.encore/uuid-str, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([max-length] []), :arglists ([max-length] []), :arglists-meta (nil nil)}, :method-params ([max-length] []), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1437, :end-line 1437, :max-fixed-arity 1, :fn-var true, :arglists ([max-length] []), :doc "Returns a UUIDv4 string of form \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",\n  Ref. http://www.ietf.org/rfc/rfc4122.txt,\n       https://gist.github.com/franks42/4159427"}, translate-signed-idx {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 813, :column 8, :end-line 813, :end-column 28, :private true, :arglists (quote ([signed-idx max-idx]))}, :private true, :name taoensso.encore/translate-signed-idx, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 28, :method-params ([signed-idx max-idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 813, :end-line 813, :max-fixed-arity 2, :fn-var true, :arglists (quote ([signed-idx max-idx]))}, pos-int? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 269, :column 8, :end-line 269, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/pos-int?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 269, :end-line 269, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nblank? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 267, :column 9, :end-line 267, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/nblank?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 267, :end-line 267, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, set-exp-backoff-timeout! {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2238, :column 14, :end-line 2238, :end-column 38, :arglists (quote ([nullary-f & [nattempt]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nullary-f [nattempt])], :arglists ([nullary-f & [nattempt]]), :arglists-meta (nil)}}, :name taoensso.encore/set-exp-backoff-timeout!, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 38, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nullary-f [nattempt])], :arglists ([nullary-f & [nattempt]]), :arglists-meta (nil)}, :method-params [(nullary-f [nattempt])], :protocol-impl nil, :arglists-meta (nil), :column 8, :line 2238, :end-line 2238, :max-fixed-arity 1, :fn-var true, :arglists ([nullary-f & [nattempt]])}, as-?bool {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 293, :column 7, :end-line 293, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-?bool, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 293, :end-line 293, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, seq-kvs {:name taoensso.encore/seq-kvs, :file "resources/public/js/out/taoensso/encore.cljs", :line 1054, :column 1, :end-line 1054, :end-column 13, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1054, :column 6, :end-line 1054, :end-column 13}, :doc "(seq     {:a :A}) => ([:a :A])\n   (seq-kvs {:a :A}) => (:a :A)"}, vsplit-first {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 778, :column 7, :end-line 778, :end-column 19, :arglists (quote ([v]))}, :name taoensso.encore/vsplit-first, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 778, :end-line 778, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, hpred {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 374, :column 7, :end-line 374, :end-column 12, :arglists (quote ([pred-form])), :doc "Implementation detail."}, :name taoensso.encore/hpred, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([pred-form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 374, :end-line 374, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pred-form])), :doc "Implementation detail."}, abs {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 629, :column 7, :end-line 629, :end-column 10, :arglists (quote ([n]))}, :name taoensso.encore/abs, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 629, :end-line 629, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, map-kvs {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1074, :column 7, :end-line 1074, :end-column 14, :arglists (quote ([kf vf m]))}, :name taoensso.encore/map-kvs, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([kf vf m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1074, :end-line 1074, :max-fixed-arity 3, :fn-var true, :arglists (quote ([kf vf m]))}, map-vals {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1083, :column 7, :end-line 1083, :end-column 15, :arglists (quote ([f m]))}, :name taoensso.encore/map-vals, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([f m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1083, :end-line 1083, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f m]))}, spaced-str-with-nils {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1315, :column 7, :end-line 1315, :end-column 27, :arglists (quote ([xs]))}, :name taoensso.encore/spaced-str-with-nils, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 27, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1315, :end-line 1315, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xs]))}, nested-merge-with {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1234, :column 7, :end-line 1234, :end-column 24, :arglists (quote ([f & maps])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f maps)], :arglists ([f & maps]), :arglists-meta (nil)}}, :name taoensso.encore/nested-merge-with, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f maps)], :arglists ([f & maps]), :arglists-meta (nil)}, :method-params [(f maps)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1234, :end-line 1234, :max-fixed-arity 1, :fn-var true, :arglists ([f & maps])}, as-?float {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 308, :column 7, :end-line 308, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/as-?float, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 308, :end-line 308, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, explode-keyword {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 570, :column 7, :end-line 570, :end-column 22, :arglists (quote ([k]))}, :name taoensso.encore/explode-keyword, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 22, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 570, :end-line 570, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, as-?nblank {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 285, :column 7, :end-line 285, :end-column 17, :arglists (quote ([x]))}, :name taoensso.encore/as-?nblank, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, xdistinct {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1215, :column 11, :end-line 1215, :end-column 20, :arglists (quote ([] [keyfn])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [keyfn]), :arglists ([] [keyfn]), :arglists-meta (nil nil)}}, :name taoensso.encore/xdistinct, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [keyfn]), :arglists ([] [keyfn]), :arglists-meta (nil nil)}, :method-params ([] [keyfn]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 1215, :end-line 1215, :max-fixed-arity 1, :fn-var true, :arglists ([] [keyfn])}, assoc-some {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1033, :column 7, :end-line 1033, :end-column 17, :arglists (quote ([m & kvs])), :doc "Assocs each kv iff its value is not nil.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m kvs)], :arglists ([m & kvs]), :arglists-meta (nil)}}, :name taoensso.encore/assoc-some, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m kvs)], :arglists ([m & kvs]), :arglists-meta (nil)}, :method-params [(m kvs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1033, :end-line 1033, :max-fixed-arity 1, :fn-var true, :arglists ([m & kvs]), :doc "Assocs each kv iff its value is not nil."}, keys=nnil? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2245, :column 7, :end-line 2245, :end-column 17, :arglists (quote ([m ks]))}, :name taoensso.encore/keys=nnil?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 17, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2245, :end-line 2245, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, as-bool {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2251, :column 7, :end-line 2251, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/as-bool, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2251, :end-line 2251, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, errorf {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2280, :column 9, :end-line 2280, :end-column 15, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/errorf, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2280, :end-line 2280, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, clj1098 {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1069, :column 7, :end-line 1069, :end-column 14, :arglists (quote ([x])), :doc "Workaround for Clojure versions [1.4, 1.5) that blow up on `reduce-kv`s\n  against a nil coll, Ref. http://dev.clojure.org/jira/browse/CLJ-1098."}, :name taoensso.encore/clj1098, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1069, :end-line 1069, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Workaround for Clojure versions [1.4, 1.5) that blow up on `reduce-kv`s\n  against a nil coll, Ref. http://dev.clojure.org/jira/browse/CLJ-1098."}, parse-bool {:name taoensso.encore/parse-bool, :file "resources/public/js/out/taoensso/encore.cljs", :line 2248, :column 1, :end-line 2248, :end-column 16, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2248, :column 6, :end-line 2248, :end-column 16}}, keys<= {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2243, :column 7, :end-line 2243, :end-column 13, :arglists (quote ([m ks]))}, :name taoensso.encore/keys<=, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2243, :end-line 2243, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, str-replace {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1336, :column 7, :end-line 1336, :end-column 18, :arglists (quote ([s match replacement])), :doc "Workaround for http://dev.clojure.org/jira/browse/CLJS-794,\n                  http://dev.clojure.org/jira/browse/CLJS-911."}, :name taoensso.encore/str-replace, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([s match replacement]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1336, :end-line 1336, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s match replacement])), :doc "Workaround for http://dev.clojure.org/jira/browse/CLJS-794,\n                  http://dev.clojure.org/jira/browse/CLJS-911."}, parse-int {:name taoensso.encore/parse-int, :file "resources/public/js/out/taoensso/encore.cljs", :line 2249, :column 1, :end-line 2249, :end-column 15, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2249, :column 6, :end-line 2249, :end-column 15}}, memoize1 {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1539, :column 7, :end-line 1539, :end-column 15, :arglists (quote ([f])), :doc "Great for Reactjs render op caching on mobile devices, etc."}, :name taoensso.encore/memoize1, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1539, :end-line 1539, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :doc "Great for Reactjs render op caching on mobile devices, etc."}, round1 {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 650, :column 7, :end-line 650, :end-column 13, :arglists (quote ([n])), :doc "Optimized common case."}, :name taoensso.encore/round1, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 650, :end-line 650, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :doc "Optimized common case."}, merge-deep-with {:name taoensso.encore/merge-deep-with, :file "resources/public/js/out/taoensso/encore.cljs", :line 2255, :column 1, :end-line 2255, :end-column 21, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2255, :column 6, :end-line 2255, :end-column 21}}, replace-in* {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 899, :column 8, :end-line 899, :end-column 19, :private true, :arglists (quote ([?vf-type m ops])), :doc "Reduces input with\n  [<type> <ks> <reset-val-or-swap-fn>] or\n         [<ks> <reset-val-or-swap-fn>] ops."}, :private true, :name taoensso.encore/replace-in*, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([?vf-type m ops]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 899, :end-line 899, :max-fixed-arity 3, :fn-var true, :arglists (quote ([?vf-type m ops])), :doc "Reduces input with\n  [<type> <ks> <reset-val-or-swap-fn>] or\n         [<ks> <reset-val-or-swap-fn>] ops."}, vec3? {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 276, :column 7, :end-line 276, :end-column 12, :arglists (quote ([x]))}, :name taoensso.encore/vec3?, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 276, :end-line 276, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, assert-min-encore-version {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 44, :column 7, :end-line 44, :end-column 32, :arglists (quote ([min-version]))}, :name taoensso.encore/assert-min-encore-version, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 32, :method-params ([min-version]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([min-version]))}, non-throwing {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 373, :column 8, :end-line 373, :end-column 20, :private true, :arglists (quote ([pred]))}, :private true, :name taoensso.encore/non-throwing, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 20, :method-params ([pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 373, :end-line 373, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pred]))}, replace-in {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 919, :column 7, :end-line 919, :end-column 17, :arglists (quote ([m & ops])), :doc "Experimental. For use with `swap!`, etc.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m ops)], :arglists ([m & ops]), :arglists-meta (nil)}}, :name taoensso.encore/replace-in, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m ops)], :arglists ([m & ops]), :arglists-meta (nil)}, :method-params [(m ops)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 919, :end-line 919, :max-fixed-arity 1, :fn-var true, :arglists ([m & ops]), :doc "Experimental. For use with `swap!`, etc."}, assoc-when {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1037, :column 7, :end-line 1037, :end-column 17, :arglists (quote ([m & kvs])), :doc "Assocs each kv iff its val is truthy.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m kvs)], :arglists ([m & kvs]), :arglists-meta (nil)}}, :name taoensso.encore/assoc-when, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m kvs)], :arglists ([m & kvs]), :arglists-meta (nil)}, :method-params [(m kvs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1037, :end-line 1037, :max-fixed-arity 1, :fn-var true, :arglists ([m & kvs]), :doc "Assocs each kv iff its val is truthy."}, as-?qname {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 288, :column 7, :end-line 288, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/as-?qname, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 288, :end-line 288, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, logp {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1899, :column 9, :end-line 1899, :end-column 13, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :name taoensso.encore/logp, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1899, :end-line 1899, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, as-map {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1112, :column 7, :end-line 1112, :end-column 13, :arglists (quote ([kvs & [kf vf]])), :doc "Cross between `hash-map` & `map-kvs`.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(kvs [kf vf])], :arglists ([kvs & [kf vf]]), :arglists-meta (nil)}}, :name taoensso.encore/as-map, :variadic true, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(kvs [kf vf])], :arglists ([kvs & [kf vf]]), :arglists-meta (nil)}, :method-params [(kvs [kf vf])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1112, :end-line 1112, :max-fixed-arity 1, :fn-var true, :arglists ([kvs & [kf vf]]), :doc "Cross between `hash-map` & `map-kvs`."}, vec* {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 331, :column 7, :end-line 331, :end-column 11, :arglists (quote ([x]))}, :name taoensso.encore/vec*, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 331, :end-line 331, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, backport-run! {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 796, :column 7, :end-line 796, :end-column 20, :arglists (quote ([proc coll])), :doc "`run!` from Clojure 1.7+"}, :name taoensso.encore/backport-run!, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 20, :method-params ([proc coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 796, :end-line 796, :max-fixed-arity 2, :fn-var true, :arglists (quote ([proc coll])), :doc "`run!` from Clojure 1.7+"}, gc-rate {:name taoensso.encore/gc-rate, :file "resources/public/js/out/taoensso/encore.cljs", :line 1517, :column 1, :end-line 1517, :end-column 31, :const true, :private true, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 1517, :column 24, :end-line 1517, :end-column 31, :const true, :private true}}, keys= {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 2242, :column 7, :end-line 2242, :end-column 12, :arglists (quote ([m ks]))}, :name taoensso.encore/keys=, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2242, :end-line 2242, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, ks>= {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 337, :column 7, :end-line 337, :end-column 11, :arglists (quote ([ks m]))}, :name taoensso.encore/ks>=, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 11, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 337, :end-line 337, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, ->vec {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 774, :column 7, :end-line 774, :end-column 12, :arglists (quote ([x]))}, :name taoensso.encore/->vec, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 774, :end-line 774, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, round2 {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 654, :column 7, :end-line 654, :end-column 13, :arglists (quote ([n])), :doc "Optimized common case."}, :name taoensso.encore/round2, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 13, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 654, :end-line 654, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :doc "Optimized common case."}, assertion-error {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/resources/public/js/out/taoensso/encore.cljs", :line 350, :column 7, :end-line 350, :end-column 22, :arglists (quote ([msg]))}, :name taoensso.encore/assertion-error, :variadic false, :file "resources/public/js/out/taoensso/encore.cljs", :end-column 22, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 350, :end-line 350, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}}, :require-macros {enc-macros taoensso.encore, taoensso.encore taoensso.encore}, :cljs.analyzer/constants {:seen #{:tick new-val :max-len nneg-int? x :?ratio :min ttl-ms vf :report :mem/all :get = :backoff-ms vector? :hash :ev timeout-ms cache-size :this-version :?content :else :keywordize :err-type :reset :protocol sequential? :unknown max-len :method :pathname :xhr-pool-depleted :new :ns :warn :msecs :trace :or have v map? :swap/dissoc :secs :loaded :mem/del kvs :months :params :days :val string? :type kf :mins :debug :err-cause :hostname even? :search :abort % nspecs :http-error :headers :fatal :round as-?int or :progress-fn :host zero? nid-specs params :total :with-credentials? have? nil? :ajax/resp-as-text :?err :mem/fresh :result :errorf :max :factor :err-msg :swap s :edn :raw-resp :info :?content-type :ajax/bad-response-type :hours :return-val :?line :years ifn? :error :?status :exception keys pos-int? :x taoensso.encore/nnil? :form as-?bool :new-val :json :timeout :resp-type :min-version as-?float have-in__30780 :ms :doc :xml count :success? :length-computable? :auto opts :end-idx :xhr :weeks :href :always return-val :timeout-ms :?error :no-content :old :in more :text}, :order [:min-version :this-version :doc :err-type :err-msg :err-cause :ns :?line :form :val :?err :else :x :type :round :min :max :factor :years :months :weeks :days :hours :mins :secs :msecs :ms have-in__30780 have :in keys opts :max-len :end-idx max-len :or nil? nneg-int? have? v vector? :new-val :return-val new-val return-val :swap/dissoc count more even? :swap :old :new :reset kvs :keywordize sequential? kf ifn? vf % map? s string? :mem/del :mem/all :mem/fresh ttl-ms pos-int? cache-size :tick or zero? nid-specs = nspecs :href :protocol :hostname :host :pathname :search :hash params :method :get :params :headers :timeout-ms :resp-type :auto :with-credentials? :progress-fn :errorf timeout-ms :timeout :edn :json :xml :text :ajax/bad-response-type :ajax/resp-as-text :raw-resp :xhr :success? :?content-type :?content :?status :?error :exception :http-error :abort :unknown :no-content :?ratio :length-computable? :loaded :total :ev :always :xhr-pool-depleted :debug as-?bool x taoensso.encore/nnil? as-?int as-?float :backoff-ms :result :trace :info :warn :error :fatal :report]}, :doc "Some tools I use often, w/o any external deps."}