{:rename-macros {}, :renames {}, :externs {document {getElementById {}}}, :use-macros {}, :excludes #{}, :name demo.core, :imports {History goog.History}, :requires {subs demo.subs, reagent reagent.core, demo.ws demo.ws, reagent.session reagent.session, views demo.views, session reagent.session, demo.views demo.views, reagent.core reagent.core, demo.handlers demo.handlers, ws demo.ws, History goog.History, demo.subs demo.subs, re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses {atom reagent.core}, :defs {mount-root {:protocol-inline nil, :meta {:file "/home/aaron/github/modern-webapp/src/cljs/demo/core.cljs", :line 13, :column 7, :end-line 13, :end-column 17, :arglists (quote ([]))}, :name demo.core/mount-root, :variadic false, :file "/home/aaron/github/modern-webapp/src/cljs/demo/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init! {:protocol-inline nil, :meta {:file "/home/aaron/github/modern-webapp/src/cljs/demo/core.cljs", :line 16, :column 7, :end-line 16, :end-column 12, :arglists (quote ([]))}, :name demo.core/init!, :variadic false, :file "/home/aaron/github/modern-webapp/src/cljs/demo/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:initialize-db}, :order [:initialize-db]}, :doc nil}