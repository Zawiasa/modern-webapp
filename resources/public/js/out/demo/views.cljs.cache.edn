;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name demo.views, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, encore taoensso.encore, taoensso.encore taoensso.encore}, :uses {debugf taoensso.encore}, :defs {disconnected {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/src/cljs/demo/views.cljs", :line 7, :column 7, :end-line 7, :end-column 19, :arglists (quote ([]))}, :name demo.views/disconnected, :variadic false, :file "src/cljs/demo/views.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, counter {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/src/cljs/demo/views.cljs", :line 12, :column 7, :end-line 12, :end-column 14, :arglists (quote ([]))}, :name demo.views/counter, :variadic false, :file "src/cljs/demo/views.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main-panel {:protocol-inline nil, :meta {:file "/Users/paulcristian/Desktop/reframe-sente/src/cljs/demo/views.cljs", :line 20, :column 7, :end-line 20, :end-column 17, :arglists (quote ([]))}, :name demo.views/main-panel, :variadic false, :file "src/cljs/demo/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {encore taoensso.encore, taoensso.encore taoensso.encore}, :cljs.analyzer/constants {:seen #{:button :on-click :ws/connected :div :count :increment-count}, :order [:div :count :button :on-click :increment-count :ws/connected]}, :doc nil}